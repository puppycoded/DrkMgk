using System;

namespace DrkMgk
{
    [Flags]
    public enum ProcessAccessFlags : int
    {
        DELETE = 0x00010000,
        READ_CONTROL = 0x00020000,
        WRITE_DAC = 0x00040000,
        WRITE_OWNER = 0x00080000,
        SYNCHRONIZE = 0x00100000,
        STANDARD_RIGHTS_ALL = 0x000F0000,
        PROCESS_TERMINATE = 0x0001,
        PROCESS_CREATE_THREAD = 0x0002,
        PROCESS_VM_OPERATION = 0x0008,
        PROCESS_VM_READ = 0x0010,
        PROCESS_VM_WRITE = 0x0020,
        PROCESS_DUP_HANDLE = 0x0040,
        PROCESS_CREATE_PROCESS = 0x0080,
        PROCESS_SET_QUOTA = 0x0100,
        PROCESS_SET_INFORMATION = 0x0200,
        PROCESS_QUERY_INFORMATION = 0x0400,
        PROCESS_SUSPEND_RESUME = 0x0800,
        PROCESS_QUERY_LIMITED_INFORMATION = 0x1000,
        PROCESS_ALL_ACCESS = STANDARD_RIGHTS_ALL | SYNCHRONIZE | 0xFFF,
    }

    [Flags]
    public enum ThreadAccessFlags : int
    {
        DELETE = 0x00010000,
        READ_CONTROL = 0x00020000,
        WRITE_DAC = 0x00040000,
        WRITE_OWNER = 0x00080000,
        SYNCHRONIZE = 0x00100000,
        STANDARD_RIGHTS_ALL = 0x000F0000,
        THREAD_TERMINATE = 0x0001,
        THREAD_SUSPEND_RESUME = 0x0002,
        THREAD_GET_CONTEXT = 0x0008,
        THREAD_SET_CONTEXT = 0x0010,
        THREAD_SET_INFORMATION = 0x0020,
        THREAD_QUERY_INFORMATION = 0x0040,
        THREAD_SET_THREAD_TOKEN = 0x0080,
        THREAD_IMPERSONATE = 0x0100,
        THREAD_DIRECT_IMPERSONATION = 0x0200,
        THREAD_ALL_ACCESS = STANDARD_RIGHTS_ALL | SYNCHRONIZE | 0x3FF,
    }

    public enum MemoryProtectionType : int
    {
        PAGE_NOACCESS = 0x01,
        PAGE_READONLY = 0x02,
        PAGE_READWRITE = 0x04,
        PAGE_WRITECOPY = 0x08,
        PAGE_EXECUTE = 0x10,
        PAGE_EXECUTE_READ = 0x20,
        PAGE_EXECUTE_READWRITE = 0x40,
        PAGE_EXECUTE_WRITECOPY = 0x80,
        PAGE_GUARD = 0x100,
        PAGE_NOCACHE = 0x200,
        PAGE_WRITECOMBINE = 0x400,
        PAGE_ACCESSIBLE = PAGE_READONLY
            | PAGE_READWRITE
            | PAGE_WRITECOPY
            | PAGE_EXECUTE
            | PAGE_EXECUTE_READ
            | PAGE_EXECUTE_READWRITE
            | PAGE_EXECUTE_WRITECOPY,
    }

    public enum MemoryAllocationState : int
    {
        MEM_COMMIT = 0x00001000,
        MEM_RESERVE = 0x00002000,
        MEM_FREE = 0x00010000,
        MEM_RESET = 0x00080000,
        MEM_PHYSICAL = 0x00400000,
        MEM_TOP_DOWN = 0x00100000,
        MEM_LARGE_PAGES = 0x20000000,
    }

    public enum MemoryAllocationType : int
    {
        MEM_PRIVATE = 0x0020000,
        MEM_MAPPED = 0x0040000,
        MEM_IMAGE = 0x1000000,
    }

    [Flags]
    public enum MemoryFreeType : int
    {
        MEM_DECOMMIT = 0x4000,
        MEM_RELEASE = 0x8000,
    }

    [Flags]
    public enum ThreadCreationFlags : int
    {
        THREAD_CREATE_SUSPENDED = 0x00004,
        THREAD_CREATE_STACK_SIZE_PARAM_IS_A_RESERVATION = 0x10000,
    }

    public enum ObjectWaitType : uint
    {
        OBJECT_WAIT_0 = 0x000,
        OBJECT_WAIT_ABANDONED = 0x080,
        OBJECT_WAIT_TIMEOUT = 0x102,
        OBJECT_WAIT_INFINITE = 0xFFFFFFFF,
    }

    [Flags]
    public enum LoadLibraryFlags : int
    {
        LOAD_DONT_RESOLVE_DLL_REFERENCES = 0x0001,
        LOAD_LIBRARY_AS_DATAFILE = 0x0002,
        LOAD_WITH_ALTERED_SEARCH_PATH = 0x0008,
        LOAD_IGNORE_CODE_AUTHZ_LEVEL = 0x0010,
        LOAD_LIBRARY_AS_IMAGE_RESOURCE = 0x0020,
        LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE = 0x0040,
        LOAD_LIBRARY_REQUIRE_SIGNED_TARGET = 0x0080,
        LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR = 0x0100,
        LOAD_LIBRARY_SEARCH_APPLICATION_DIR = 0x0200,
        LOAD_LIBRARY_SEARCH_USER_DIRS = 0x0400,
        LOAD_LIBRARY_SEARCH_SYSTEM32 = 0x0800,
        LOAD_LIBRARY_SEARCH_DEFAULT_DIRS = 0x1000,
        LOAD_LIBRARY_SAFE_CURRENT_DIRS = 0x2000,
    }
}
